<?xml version="1.0" encoding="UTF-8" ?>

<project name="Infra" default="help">

    <property file="build.properties.local" />
    <property file="build.properties" />
    <property file="build.properties.dist" />


    <property name="sparql.password" value="" />

    <target name="build-ec2-ami">
        <!-- Running packer for aws -->
        <exec command="AWS_PROFILE=${aws.profile} ${packer.path} build --var site_type=${project.siteType}
            --var aws_region=${aws.region} --var mysql_password=${drupal.db.password}
            --var virtuoso_password=${sparql.password} --var doc_root=/srv/project/${documentroot.path} aws.json"
          passthru="true" dir="vendor/ec-europa/infra/packer"

            />
    </target>

    <target name="build-virtualbox-image">
        <!-- Running packer for virtualbox -->
        <exec command="${packer.path} build --var site_type=${project.siteType}  virtualbox.json"
              passthru="true" dir="vendor/ec-europa/infra/packer"/>
    </target>

    <target name="setup-aws">
        <property name="aws.profile" value="" />
        <aws-config region="${aws.region}" profile="${aws.profile}" />
    </target>

    <target name="delete-deployment-group">
        <aws-deploy-delete-deployment-group
                name="${deploy.groupName}"
                application="${deploy.applicationName}" />
    </target>

    <target name="delete-stack" depends="delete-deployment-group">
        <aws-cf-deletestack name="${cf.stackName}" />
    </target>

    <target name="run-stack">
        <aws-cf-runstack
                name="${deploy.applicationName}-${cf.stackName}"
                updateOnConflict="true"
                capabilities="CAPABILITY_IAM"
                templatePath="./vendor/ec-europa/infra/cloudformation/single-server.template">
            <param name="KeyName" value="${cf.KeyName}" />
            <param name="ApplicationName" value="${deploy.applicationName}" />
            <param name="env" value="${cf.stackName}" />
            <param name="SiteType" value="${project.siteType}" />
        </aws-cf-runstack>
    </target>

    <target name="setup-deployment-group">
        <aws-deploy-deployment-group
                name="${cf.stackName}"
                updateOnConflict="true"
                deploymentConfigName="CodeDeployDefault.OneAtATime"
                serviceRole="${deploy.serviceRole}"
                application="${deploy.applicationName}">
            <ec2TagFilter key="stack" value="${deploy.applicationName}-${cf.stackName}" />
        </aws-deploy-deployment-group>
    </target>

</project>
